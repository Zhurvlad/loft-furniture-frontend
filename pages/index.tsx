import Head from 'next/head'
import React from 'react';

import {userSlice} from '../store/reducers/UserSlice';
import {shoppingCartApi} from '../store/shoppingCart/shoppingCart.api';

import {useAppDispatch, useAppSelector} from '../hooks/redux';
import {useMediaQuery} from '../hooks/useMediaQuery';

import {Api} from '../utils/api/index';

import {Breadcrumbs} from '../components/modules/Breadcrumbs/Breadcrumbs';
import {MainPage} from '../components/templates/MainPage/index';
import {MainLayout} from '../components/layout/MainLayout';

export default function Home() {

  const isMedia768 = useMediaQuery(768)

  const dispatch = useAppDispatch()

  const {user} = useAppSelector(state => state.user)
  //@ts-ignore
  const {data: cartItem} = shoppingCartApi.useGetUserCartQuery({userId: user?.user.userId})

  /* const shouldCheckAuth = useRef(true)*/

  //TODO Подумать как переделать
  const checkUser = async () => {
    //@ts-ignore
    if (!user?.user) {
      const data = await Api().user.checkUser()
      dispatch(userSlice.actions.checkUser(data))
    }
  }

  React.useEffect(() => {
    checkUser()
  }, [])


  /*  const {data, error, isLoading} = useGetSofasQuery()*/

  /*const getDefaultTextGenerator = React.useCallback(() => '', [])
  const getTextGenerator = React.useCallback((param: string) => ({}[param]), []);*/

  const getDefaultTextGenerator = () => ''

  const getTextGenerator = () => ''

  /* React.useEffect(() => {
     fetchSofas(dispatch)
   }, [])*/

  return (
    <>
      <Head>
        <title>Loft Мебель</title>
        <meta charSet='UTF-8'/>
        <meta httpEquiv='X-UA-Compatible' content='IE-edge'/>
        <meta name="description" content="Generated by create next app"/>
        <meta name="viewport" content="width=device-width, initial-scale=1"/>
        <link rel={'icon'} type={'image/svg'} sizes={'32x32'} href={'/img/LogoSmall.svg'}/>

      </Head>

      <MainLayout>
        <Breadcrumbs
          getDefaultTextGenerator={getDefaultTextGenerator}
          getTextGenerator={getTextGenerator}/>
        <MainPage/>
        {isMedia768 && <div className={'overlay'}/>}
      </MainLayout>
    </>
  )
}
